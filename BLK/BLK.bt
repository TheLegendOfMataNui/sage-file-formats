//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: BLK.bt
//   Authors: JrMasterModelBuilder
// Copyright: Copyright (c) 2018 JrMasterModelBuilder
//   License: MPL-2.0
//   Version: 1.0
//   Purpose: Parse SAGE BLK files.
//  Category: SAGE
// File Mask: *.blk
//  ID Bytes: 42 4C 4B 46 01 00 00 00
//   History:
//       1.0: Initial release
//------------------------------------------------

typedef char MAGIC[4];

// No other values seen.
enum FLAGS {
	FLAGS_UNCOMPRESSED = 0b10,
	FLAGS_COMPRESSED = 0b11
};

typedef struct {
	char name[40] <
		bgcolor=cGreen,
		comment="File name"
	>;
	ulong size_compressed <
		bgcolor=cDkBlue,
		format=hex,
		comment="Compressed size"
	>;
	ulong size_uncompressed <
		bgcolor=cDkBlue,
		format=hex,
		comment="Uncompressed size"
	>;
	FLAGS flags <
		bgcolor=cAqua,
		format=binary,
		comment="0b10 = uncompressed, 0b11 = compressed"
	>;
	ulong offset <
		bgcolor=cDkBlue,
		format=hex,
		comment="File offset"
	>;

	if (
		flags != FLAGS_UNCOMPRESSED &&
		flags != FLAGS_COMPRESSED
	) {
		Warning("Unexpected flags.");
	}

	if (size_compressed) {
		local ulong tell = FTell();
		FSeek(offset);
		char body[size_compressed] <bgcolor=cSilver, comment="Entry data">;
		FSeek(tell);
	}
} ENTRY <optimize=false, comment="File entry">;

typedef struct {
	MAGIC magic <bgcolor=cWhite, comment="File signature">;
	ulong version <bgcolor=cDkBlue, comment="Version number">;
	ulong count <bgcolor=cDkBlue, comment="Entry count">;
} HEADER <comment="File header">;




LittleEndian();

HEADER header;

if (header.magic != "BLKF") {
	Warning("BLK format check failed.");
	return -1;
}

ENTRY entries[header.count];
