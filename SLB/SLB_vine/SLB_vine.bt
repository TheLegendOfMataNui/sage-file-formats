//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: SLB_vine.bt
//   Authors: JrMasterModelBuilder
// Copyright: Copyright (c) 2018 JrMasterModelBuilder
//   License: MPL-2.0
//   Version: 1.0
//   Purpose: Parse SAGE SLB file: *_vine.slb
//  Category: SAGE
// File Mask: *.slb
//  ID Bytes:
//   History:
//       1.0: Initial release
//------------------------------------------------

typedef ulong OFFSET <format=hex, bgcolor=cPurple>;

local long FOOTER_MAGIC = 0xC0FFEE;

typedef struct {
	long entry_count <
		bgcolor=cDkBlue,
		comment="Number of entries before the footer"
	>;
	long magic <format=hex, bgcolor=cWhite, comment="Magic: 0xC0FFEE">;

	if (entry_count) {
		local OFFSET tell = FTell();
		FSeek(FTell() - (8 + entry_count * 4));
		OFFSET entries[entry_count] <comment="Offsets to make pointers">;
		FSeek(tell);
	}
} FOOTER <
	optimize=false,
	comment="List of offsets to be made absolute pointers by the game engine"
>;

void read_footer() {
	// Calculate the offset of footer magic (4-byte aligned).
	local OFFSET footer_offset = FileSize();
	footer_offset -= 4;
	footer_offset >>= 2;
	footer_offset *= 4;

	// Check if footer present.
	if (ReadInt(footer_offset) != FOOTER_MAGIC) {
		return;
	}
	footer_offset -= 4;

	// Remember position, go to footer, read the footer, restore position.
	local OFFSET tell = FTell();
	FSeek(footer_offset);
	FOOTER footer;
	FSeek(tell);
}




typedef struct {
	float x <bgcolor=cAqua>;
	float y <bgcolor=cAqua>;
	float z <bgcolor=cAqua>;
} POINT3D <comment="Matches: ScPoint3d">;

typedef enum <long> {
	BOOL32_FALSE = 0,
	BOOL32_TRUE = 1
} BOOL32 <
	bgcolor=cDkBlue,
	comment="Boolean true or false"
>;

typedef struct {
	POINT3D position <comment="Position">;
	float orientation <bgcolor=cAqua, comment="Orientation">;
	BOOL32 bool_1 <comment="Unknown, possibly animation related">;
	BOOL32 bool_2 <comment="Unknown, possibly animation related">;
	float float_1 <bgcolor=cAqua, comment="Unknown, possibly animation related">;
} VINE <format=binary, comment="Vine">;

typedef struct {
	long entry_count <bgcolor=cDkBlue, comment="Number of entries">;
	OFFSET body_offset <comment="Offset of table body">;

	if (entry_count) {
		local OFFSET tell = FTell();
		FSeek(body_offset);

		VINE entries[entry_count] <comment="Vines">;

		FSeek(tell);
	}
} VINE_TABLE <
	optimize=false,
	comment="Vine table",
	open=true
>;




LittleEndian();

read_footer();
VINE_TABLE vine_table;
