//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: SLB_conv_char.bt
//   Authors: JrMasterModelBuilder
// Copyright: Copyright (c) 2018 JrMasterModelBuilder
//   License: MPL-2.0
//   Version: 1.0
//   Purpose: Parse SAGE SLB file: conv_char.slb
//  Category: SAGE
// File Mask: *.slb
//  ID Bytes:
//   History:
//       1.0: Initial release
//------------------------------------------------

typedef ulong OFFSET <format=hex, bgcolor=cPurple>;

local long FOOTER_MAGIC = 0xC0FFEE;

typedef struct {
	long entry_count <
		bgcolor=cDkBlue,
		comment="Number of entries before the footer"
	>;
	long magic <format=hex, bgcolor=cWhite, comment="Magic: 0xC0FFEE">;

	if (entry_count) {
		local OFFSET tell = FTell();
		FSeek(FTell() - (8 + entry_count * 4));
		OFFSET entries[entry_count] <comment="Offsets to make pointers">;
		FSeek(tell);
	}
} FOOTER <
	optimize=false,
	comment="List of offsets to be made absolute pointers by the game engine"
>;

void read_footer() {
	// Calculate the offset of footer magic (4-byte aligned).
	local OFFSET footer_offset = FileSize();
	footer_offset -= 4;
	footer_offset >>= 2;
	footer_offset *= 4;

	// Check if footer present.
	if (ReadInt(footer_offset) != FOOTER_MAGIC) {
		return;
	}
	footer_offset -= 4;

	// Remember position, go to footer, read the footer, restore position.
	local OFFSET tell = FTell();
	FSeek(footer_offset);
	FOOTER footer;
	FSeek(tell);
}




typedef union {
	long i <format=hex>;
	char c[4];
} IDENTIFIER <bgcolor=cSilver, comment="Matches: ScIdentifier">;

typedef struct {
	IDENTIFIER id_1 <comment="The ID searched by">;
	IDENTIFIER id_2 <comment="Unknown ID">;
	float float_1 <bgcolor=cAqua, comment="Unknown, camera related">;
	float float_2 <bgcolor=cAqua, comment="Unknown">;
	float float_3 <bgcolor=cAqua, comment="Unknown">;
	float float_4 <bgcolor=cAqua, comment="Unknown">;
	float float_5 <bgcolor=cAqua, comment="Unknown">;
	float float_6 <bgcolor=cAqua, comment="Unknown, camera related">;
	float float_7 <bgcolor=cAqua, comment="Unknown, camera related">;
	char byte_1 <bgcolor=cLtBlue, comment="Unknown">;
	char _pad[3] <bgcolor=cBlack, hidden=true, comment="Alignment bytes">;
} CONV_CHAR_INFO <optimize=false, comment="Matches: _GtConvCharInfoSlk">;

typedef struct {
	long entry_count <bgcolor=cDkBlue, comment="Number of entries">;
	OFFSET body_offset <comment="Offset of body">;

	if (entry_count) {
		local OFFSET tell = FTell();
		FSeek(body_offset);

		CONV_CHAR_INFO entries[entry_count] <comment="Entries">;

		FSeek(tell);
	}
} CONV_CHAR_INFO_TABLE <
	optimize=false,
	comment="Conversation character info table",
	open=true
>;




LittleEndian();

read_footer();
CONV_CHAR_INFO_TABLE conv_char_info_table;
