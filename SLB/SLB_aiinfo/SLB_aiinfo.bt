//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: SLB_aiinfo.bt
//   Authors: JrMasterModelBuilder
// Copyright: Copyright (c) 2018 JrMasterModelBuilder
//   License: MPL-2.0
//   Version: 1.0
//   Purpose: Parse SAGE SLB file: aiinfo.slb
//  Category: SAGE
// File Mask: *.slb
//  ID Bytes:
//   History:
//       1.0: Initial release
//------------------------------------------------

typedef ulong OFFSET <format=hex, bgcolor=cPurple>;

local long FOOTER_MAGIC = 0xC0FFEE;

typedef struct {
	long entry_count <
		bgcolor=cDkBlue,
		comment="Number of entries before the footer"
	>;
	long magic <format=hex, bgcolor=cWhite, comment="Magic: 0xC0FFEE">;

	if (entry_count) {
		local OFFSET tell = FTell();
		FSeek(FTell() - (8 + entry_count * 4));
		OFFSET entries[entry_count] <comment="Offsets to make pointers">;
		FSeek(tell);
	}
} FOOTER <
	optimize=false,
	comment="List of offsets to be made absolute pointers by the game engine"
>;

void read_footer() {
	// Calculate the offset of footer magic (4-byte aligned).
	local OFFSET footer_offset = FileSize();
	footer_offset -= 4;
	footer_offset >>= 2;
	footer_offset *= 4;

	// Check if footer present.
	if (ReadInt(footer_offset) != FOOTER_MAGIC) {
		return;
	}
	footer_offset -= 4;

	// Remember position, go to footer, read the footer, restore position.
	local OFFSET tell = FTell();
	FSeek(footer_offset);
	FOOTER footer;
	FSeek(tell);
}




typedef union {
	long i <format=hex>;
	char c[4];
} IDENTIFIER <bgcolor=cSilver, comment="Matches: ScIdentifier">;

typedef enum <char> {
	BOOL8_FALSE = 0,
	BOOL8_TRUE = 1
} BOOL8 <
	bgcolor=cLtBlue,
	comment="Boolean true or false"
>;

typedef enum <short> {
	ATTACK_TYPE_MELEE = 0,
	ATTACK_TYPE_KAMIKAZE = 1,
	ATTACK_TYPE_JUMP = 2,
	ATTACK_TYPE_RANGED = 3,
	ATTACK_TYPE_MOVETOATTACK = 4,
	ATTACK_TYPE_MINIBOSS = 5
} ATTACK_TYPE <
	bgcolor=cLtBlue,
	comment="Attach type"
>;

typedef struct {
	float a <bgcolor=cAqua, comment="Unknown">;
	float b <bgcolor=cAqua, comment="Unknown">;
} TIMER_VALUES <comment="Unknown pair of values for timer", open=true>;

typedef struct {
	BOOL8 flying <comment="Boolean marker for flying">;
	char _pad_1[3] <bgcolor=cBlack, hidden=true>;
	float range <bgcolor=cAqua, comment="Max range, multiplied by 4 for some things">;
	long patrol_randomness <bgcolor=cDkBlue, comment="Randomness threshold, 0-100">;
	TIMER_VALUES timer_values_idle;
	TIMER_VALUES timer_values_patrol;
	short toughness <bgcolor=cBlue, comment="How hard to kill, or amount of life">;
	ATTACK_TYPE attack_type <bgcolor=cBlue, comment="The initial attack type">;
	BOOL8 benign <comment="Initially benign or not">;
	char projectile_sprite[32] <bgcolor=cLtGreen, comment="Path of projectile sprite">;
} AIINFO <comment="AI Info", open=true>;




LittleEndian();

read_footer();
AIINFO aiinfo;
